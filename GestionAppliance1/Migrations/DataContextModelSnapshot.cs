// <auto-generated />
using System;
using GestionAppliance1.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GestionAppliance1.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("GestionAppliance1.Models.Appliance", b =>
                {
                    b.Property<int>("Appliance_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Appliance_Id"), 1L, 1);

                    b.Property<int>("ApplianceType")
                        .HasColumnType("int");

                    b.Property<string>("DBID")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<bool>("Disponibilite")
                        .HasColumnType("bit");

                    b.Property<string>("Libell")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<string>("References")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("TypeApplianceTypeApp_ID")
                        .HasColumnType("int");

                    b.HasKey("Appliance_Id");

                    b.HasIndex("TypeApplianceTypeApp_ID");

                    b.ToTable("Appliance");
                });

            modelBuilder.Entity("GestionAppliance1.Models.Client", b =>
                {
                    b.Property<int>("Client_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Client_Id"), 1L, 1);

                    b.Property<string>("Activite")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Libelle")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Secteur")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.HasKey("Client_Id");

                    b.ToTable("Client");
                });

            modelBuilder.Entity("GestionAppliance1.Models.Contrat", b =>
                {
                    b.Property<int>("Contrat_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Contrat_Id"), 1L, 1);

                    b.Property<int>("Client_Id")
                        .HasColumnType("int");

                    b.Property<int?>("Client_Id1")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(80)");

                    b.Property<string>("Fonction")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.HasKey("Contrat_Id");

                    b.HasIndex("Client_Id1");

                    b.ToTable("Contrat");
                });

            modelBuilder.Entity("GestionAppliance1.Models.POV", b =>
                {
                    b.Property<int>("POV_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("POV_Id"), 1L, 1);

                    b.Property<string>("Analyse_CyberSecurite")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<int>("Appliance_Id")
                        .HasColumnType("int");

                    b.Property<int?>("Appliance_Id1")
                        .HasColumnType("int");

                    b.Property<int>("Client_Id")
                        .HasColumnType("int");

                    b.Property<int?>("Client_Id1")
                        .HasColumnType("int");

                    b.Property<string>("Compte_Manager")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime>("Date_Debut")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date_Fin")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Ingenieur_CyberSecurite")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Libelle_POV")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.HasKey("POV_Id");

                    b.HasIndex("Appliance_Id1");

                    b.HasIndex("Client_Id1");

                    b.ToTable("POV");
                });

            modelBuilder.Entity("GestionAppliance1.Models.Seance", b =>
                {
                    b.Property<int>("Seance_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Seance_Id"), 1L, 1);

                    b.Property<DateTime>("Date_Seance")
                        .HasColumnType("datetime2");

                    b.Property<int>("POV_Id")
                        .HasColumnType("int");

                    b.Property<int?>("POV_Id1")
                        .HasColumnType("int");

                    b.Property<string>("Participant")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Resumer")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.HasKey("Seance_Id");

                    b.HasIndex("POV_Id1");

                    b.ToTable("Seance");
                });

            modelBuilder.Entity("GestionAppliance1.Models.Suivi", b =>
                {
                    b.Property<int>("Suivi_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Suivi_ID"), 1L, 1);

                    b.Property<string>("Compte_Rendu")
                        .IsRequired()
                        .HasColumnType("varchar(500)");

                    b.Property<float>("Montant")
                        .HasColumnType("real");

                    b.Property<bool>("Offre_Comm")
                        .HasColumnType("bit");

                    b.Property<int>("POV_Id")
                        .HasColumnType("int");

                    b.Property<int?>("POV_Id1")
                        .HasColumnType("int");

                    b.Property<int>("TypePrestation_ID")
                        .HasColumnType("int");

                    b.Property<int?>("TypePrestation_ID1")
                        .HasColumnType("int");

                    b.HasKey("Suivi_ID");

                    b.HasIndex("POV_Id1");

                    b.HasIndex("TypePrestation_ID1");

                    b.ToTable("Suivi");
                });

            modelBuilder.Entity("GestionAppliance1.Models.TypeAppliance", b =>
                {
                    b.Property<int>("TypeApp_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TypeApp_ID"), 1L, 1);

                    b.Property<string>("Libelle")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.HasKey("TypeApp_ID");

                    b.ToTable("TypeAppliance");
                });

            modelBuilder.Entity("GestionAppliance1.Models.TypePrestation", b =>
                {
                    b.Property<int>("TypePrestation_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TypePrestation_ID"), 1L, 1);

                    b.Property<string>("Libelle")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.HasKey("TypePrestation_ID");

                    b.ToTable("TypePrestation");
                });

            modelBuilder.Entity("GestionAppliance1.Models.Appliance", b =>
                {
                    b.HasOne("GestionAppliance1.Models.TypeAppliance", "TypeAppliance")
                        .WithMany()
                        .HasForeignKey("TypeApplianceTypeApp_ID");

                    b.Navigation("TypeAppliance");
                });

            modelBuilder.Entity("GestionAppliance1.Models.Contrat", b =>
                {
                    b.HasOne("GestionAppliance1.Models.Client", "Client")
                        .WithMany()
                        .HasForeignKey("Client_Id1");

                    b.Navigation("Client");
                });

            modelBuilder.Entity("GestionAppliance1.Models.POV", b =>
                {
                    b.HasOne("GestionAppliance1.Models.Appliance", "Appliance")
                        .WithMany()
                        .HasForeignKey("Appliance_Id1");

                    b.HasOne("GestionAppliance1.Models.Client", "Client")
                        .WithMany()
                        .HasForeignKey("Client_Id1");

                    b.Navigation("Appliance");

                    b.Navigation("Client");
                });

            modelBuilder.Entity("GestionAppliance1.Models.Seance", b =>
                {
                    b.HasOne("GestionAppliance1.Models.POV", "POV")
                        .WithMany()
                        .HasForeignKey("POV_Id1");

                    b.Navigation("POV");
                });

            modelBuilder.Entity("GestionAppliance1.Models.Suivi", b =>
                {
                    b.HasOne("GestionAppliance1.Models.POV", "POV")
                        .WithMany()
                        .HasForeignKey("POV_Id1");

                    b.HasOne("GestionAppliance1.Models.TypePrestation", "TypePrestation")
                        .WithMany()
                        .HasForeignKey("TypePrestation_ID1");

                    b.Navigation("POV");

                    b.Navigation("TypePrestation");
                });
#pragma warning restore 612, 618
        }
    }
}
